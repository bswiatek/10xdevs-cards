name: Master CI/CD

on:
  workflow_dispatch:

# Cancel in-progress runs for the same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run Prettier check
        run: npm run format -- --check

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: lint

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm run test

  build:
    name: Build Application
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: [lint, unit-tests]

    env:
      NODE_ENV: production
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
      OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build for Cloudflare
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 1

  deploy:
    name: Deploy to Cloudflare Pages
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: build
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Download build artifacts
        uses: actions/download-artifact@v5
        with:
          name: dist
          path: dist

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy dist --project-name=${{ secrets.CLOUDFLARE_PROJECT_NAME }} --branch=master

  status-summary:
    name: Deployment Status
    runs-on: ubuntu-latest
    needs: [lint, unit-tests, build, deploy]
    if: always()

    steps:
      - name: Prepare status message
        id: status
        run: |
          echo "## 🚀 Master CI/CD Status" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Check job statuses
          LINT_STATUS="${{ needs.lint.result }}"
          UNIT_STATUS="${{ needs.unit-tests.result }}"
          BUILD_STATUS="${{ needs.build.result }}"
          DEPLOY_STATUS="${{ needs.deploy.result }}"

          # Determine overall status
          if [[ "$LINT_STATUS" == "success" && "$UNIT_STATUS" == "success" && "$BUILD_STATUS" == "success" && "$DEPLOY_STATUS" == "success" ]]; then
            OVERALL="✅ Deployment successful"
            echo "status=success" >> $GITHUB_OUTPUT
          else
            OVERALL="❌ Deployment failed"
            echo "status=failure" >> $GITHUB_OUTPUT
          fi

          echo "### $OVERALL" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Job | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----|--------|" >> $GITHUB_STEP_SUMMARY

          # Lint status
          if [[ "$LINT_STATUS" == "success" ]]; then
            echo "| 🔍 Lint | ✅ Passed |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| 🔍 Lint | ❌ Failed |" >> $GITHUB_STEP_SUMMARY
          fi

          # Unit tests status
          if [[ "$UNIT_STATUS" == "success" ]]; then
            echo "| 🧪 Unit Tests | ✅ Passed |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| 🧪 Unit Tests | ❌ Failed |" >> $GITHUB_STEP_SUMMARY
          fi

          # Build status
          if [[ "$BUILD_STATUS" == "success" ]]; then
            echo "| 🔨 Build | ✅ Passed |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| 🔨 Build | ❌ Failed |" >> $GITHUB_STEP_SUMMARY
          fi

          # Deploy status
          if [[ "$DEPLOY_STATUS" == "success" ]]; then
            echo "| 🚀 Deploy | ✅ Passed |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| 🚀 Deploy | ❌ Failed |" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "---" >> $GITHUB_STEP_SUMMARY
          echo "*Deployed: $(date -u +'%Y-%m-%d %H:%M:%S UTC')*" >> $GITHUB_STEP_SUMMARY
